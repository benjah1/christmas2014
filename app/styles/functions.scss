@mixin triangle($width, $height) {
	height: $height;
	width: $width;
	$deg: rad-to-deg(atan2($width/2, $height))*2;
	& > div {
		transform: translate3d($width/2,0,0) rotateZ(90-$deg/2);
		position: absolute;
	}
	& > div > div {
		position: absolute;
		height: $height/cos(deg-to-rad($deg/2));
		width: $height/cos(deg-to-rad($deg/2));
		transform-origin: 0 0 0;
		transform: skewX(90-$deg) scaleY(cos(90-$deg));
		overflow: hidden;
	}
	& > div > div > div{
		position: absolute;
		height: $height;
		width: $width;
		transform-origin: 0 0 0;
		transform: scaleY(1/cos(90-$deg)) skewX(-90+$deg) rotateZ(-90+$deg/2) translate3d(-$width/2,0,0);
		overflow: hidden;
	}
	& > div > div > div > div {
		width: 100%;
		height: 100%;
	}
}

/* for flip slide specific */
@mixin innerPosition($index, $max, $offset) {
	.inner {
		.content {
			left: $pageWidth/($innerCount * 2) * $index * -1 - $offset;
		}
		@if $index != $max - 1 {
			@include innerPosition($index + 1, $max, $offset);
		}
	}
}


@mixin snow($class, $size, $delay, $duration, $x, $z, $rx, $rz ) {
	.#{$class} {
		transform: translate3d(#{$x*3}px, 0px, 0) rotateX(0deg) rotateZ(#{$rz}deg);
		&:after {
			width: #{$size}px;
			height: #{$size}px;
			box-shadow: 0 0 #{$size*2}px #{$size}px $white;
			animation-delay: #{$delay}s;
			animation-duration: #{$duration}s;
		}
	}
	.up {
		.#{$class} {
			transform: translate3d(#{$x}px, 0, #{$z}px) rotateX(#{$rx}deg) rotateZ(#{$rz}deg);
		}
	}
}

@function makeShadow($a, $size, $blur) {
	$ic: 0;
	$jc: 0;
	$val:0 0 0 0 #FFF;
	$ssize: $size;
	@each $i in $a {
		$jc: 0;
		@each $j in $i {
			@if ( 1 == $j ) {
				$val: #{$val}, #{$ssize*$jc} #{$ssize*$ic} #{$blur} #{$size/2} #FFF;
			}
			@if ( 2 == $j ) {
				$val: #{$val}, #{$ssize*$jc} #{$ssize*$ic} 0 0 #FFF;
			}
		$jc: $jc+1;
		}
		$ic: $ic+1;
	}
	@return $val;
}

@function makeShadowPageZeroAnimate($a, $size, $blur, $b) {
	$ic: 0;
	$jc: 0;
	$val:0 0 0 0 #FFF;
	$ssize: $size;
	$c: length($a)-$b - 1;
	@each $i in $a {
		$jc: 0;
		@each $j in $i {
			@if (1 == $j and $ic >= $c) {
				$m: ceil(length($i)/2);
				@if ( ($m - ($ic - $c) - 1 ) <= $jc and $jc <= ($m + ($ic - $c) - 1)) {
					$val: #{$val}, #{$ssize*$jc} #{$ssize*$ic} #{$blur} #{$size/2} #FFF;
				} @else {
					$val: #{$val}, #{$ssize*$jc} #{$ssize*$ic} 0 0 #FFF;	
				}
			} @else {
				$val: #{$val}, #{$ssize*$jc} #{$ssize*$ic} 0 0 #FFF;
			}

			$jc: $jc+1;
		}
		$ic: $ic+1;
	}
	@return $val;
}
